"""creating a new id for user and todos 

Revision ID: 090e6b6a7923
Revises: c42fd026ad65
Create Date: 2024-01-22 23:42:35.036915

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "090e6b6a7923"
down_revision: Union[str, None] = "c42fd026ad65"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("todos")
    op.drop_table("users")
    op.create_table(
        "todos",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("todo_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("todo_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("todo_done_or_not", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "todo_created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "todo_updated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("owner_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["users.id"], name="todos_owner_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name="todos_pkey"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        sa.UniqueConstraint("email", name="users_email_key"),
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "todos",
        sa.Column("todo_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("todo_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("todo_done_or_not", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "todo_created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "todo_updated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("owner_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.user_id"],
            name="todos_owner_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("todo_id", name="todos_pkey"),
    )
    op.create_table(
        "users",
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("first_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("last_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("user_id", name="users_pkey"),
        sa.UniqueConstraint("email", name="users_email_key"),
    )
    # ### end Alembic commands ###
